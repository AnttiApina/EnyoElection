{"version":3,"sources":["lib/onyx/index.js","lib/onyx/src/ProgressBar/ProgressBar.js","lib/onyx/src/Slider/Slider.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxfile":"generated.js","sourceRoot":"","sourcesContent":["/**\n* Features a variety of commonly used widgets, including toolbars, text inputs, checkboxes, groups\n* and multiple types of buttons.\n*\n* @namespace onyx\n*/\nmodule.exports.version = \"2.7.0\";\n\nvar dom = require('enyo/dom');\ndom.addBodyClass('onyx');\n","require('onyx');\n\n/**\n* Contains the declaration for the {@link module:onyx/ProgressBar~ProgressBar} kind.\n* @module onyx/ProgressBar\n*/\n\nvar\n\tkind = require('enyo/kind'),\n\tAnimator = require('enyo/Animator'),\n\tControl = require('enyo/Control');\n\n/**\n* Fires when progress bar finishes animating to a position.\n*\n* @event module:onyx/ProgressBar~ProgressBar#onAnimateProgressFinish\n* @type {module:enyo/Animator~Animator}\n* @todo Not sure why the animator is passed as the payload to the event ...\n* @public\n*/\n\n/**\n* {@link module:onyx/ProgressBar~ProgressBar} is a control that shows the current progress of a\n* process in a horizontal bar.\n*\n* ```javascript\n* \tvar\n* \t\tkind = require('enyo/kind'),\n* \t\tProgressBar = require('onyx/ProgressBar');\n*\n* \t{kind: ProgressBar, progress: 10}\n* ```\n*\n* To animate a progress change, call the\n* [animateProgressTo()]{@link module:onyx/ProgressBar~ProgressBar#animateProgressTo} method:\n*\n* ```javascript\n* \tthis.$.progressBar.animateProgressTo(50);\n* ```\n*\n* You may customize the color of the bar by applying a style via the\n* [barClasses]{@link module:onyx/ProgressBar~ProgressBar#barClasses} property, e.g.:\n*\n* ```\n* \tvar\n* \t\tkind = require('enyo/kind'),\n* \t\tProgressBar = require('onyx/ProgressBar');\n*\n* \t{kind: ProgressBar, barClasses: 'onyx-dark'}\n* ```\n*\n* @class ProgressBar\n* @extends module:enyo/Control~Control\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends module:onyx/ProgressBar~ProgressBar.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.ProgressBar',\n\n\t/**\n\t* @private\n\t*/\n\tkind: Control,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-progress-bar',\n\n\t/**\n\t* @lends module:onyx/ProgressBar~ProgressBar.prototype\n\t* @private\n\t*/\n\tpublished: {\n\t\t/**\n\t\t* Current position of progress bar.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default  0\n\t\t* @public\n\t\t*/\n\t\tprogress: 0,\n\n\t\t/**\n\t\t* Minimum progress value (i.e., no progress made).\n\t\t*\n\t\t* @type {Number}\n\t\t* @default  0\n\t\t* @public\n\t\t*/\n\t\tmin: 0,\n\n\t\t/**\n\t\t* Maximum progress value (i.e., process complete).\n\t\t*\n\t\t* @type {Number}\n\t\t* @default  100\n\t\t* @public\n\t\t*/\n\t\tmax: 100,\n\n\t\t/**\n\t\t* CSS classes to apply to progress bar.\n\t\t*\n\t\t* @type {String}\n\t\t* @default  ''\n\t\t* @public\n\t\t*/\n\t\tbarClasses: '',\n\n\t\t/**\n\t\t* When `true`, stripes are shown in progress bar.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default  true\n\t\t* @public\n\t\t*/\n\t\tshowStripes: true,\n\n\t\t/**\n\t\t* If `true` (and [showStripes]{@link module:onyx/ProgressBar~ProgressBar#showStripes} is `true`),\n\t\t* stripes shown in progress bar are animated.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default  true\n\t\t* @public\n\t\t*/\n\t\tanimateStripes: true,\n\n\t\t/**\n\t\t* Sliders may be \"snapped to\" multiples of this value in either direction.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default  0\n\t\t* @public\n\t\t* @todo  This doesn't appear to be supported. Only referenced by a method which\n\t\t* \titself isn't called by anthing\n\t\t*/\n\t\tincrement: 0\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonAnimateProgressFinish: ''\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcomponents: [\n\t\t{name: 'progressAnimator', kind: Animator, onStep: 'progressAnimatorStep', onEnd: 'progressAnimatorComplete'},\n\t\t{name: 'bar', classes: 'onyx-progress-bar-bar'}\n\t],\n\n\t/**\n\t* @private\n\t*/\n\tcreate: function () {\n\t\tControl.prototype.create.apply(this, arguments);\n\t\tthis.progressChanged();\n\t\tthis.barClassesChanged();\n\t\tthis.showStripesChanged();\n\t\tthis.animateStripesChanged();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tbarClassesChanged: function (old) {\n\t\tthis.$.bar.removeClass(old);\n\t\tthis.$.bar.addClass(this.barClasses);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tshowStripesChanged: function () {\n\t\tthis.$.bar.addRemoveClass('striped', this.showStripes);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tanimateStripesChanged: function () {\n\t\tthis.$.bar.addRemoveClass('animated', this.animateStripes);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tprogressChanged: function () {\n\t\tthis.progress = this.clampValue(this.min, this.max, this.progress);\n\t\tvar p = this.calcPercent(this.progress);\n\t\tthis.updateBarPosition(p);\n\t},\n\n\t/**\n\t* Clamps a specified value to the nearest [increment]{@link module:onyx/ProgressBar~ProgressBar#increment}\n\t* value.\n\t*\n\t* @param  {Number} value - The value to clamp.\n\t* @return {Number}         - The clamped value.\n\t* @private\n\t*/\n\tcalcIncrement: function (value) {\n\t\treturn (Math.round(value / this.increment) * this.increment);\n\t},\n\n\t/**\n\t* Ensures that passed-in value is between the specified minimum and maximum.\n\t*\n\t* @param  {Number} min   - Minimum value.\n\t* @param  {Number} max   - Maximum value.\n\t* @param  {Number} value - The value to clamp.\n\t* @return {Number}         - The clamped value.\n\t* @private\n\t*/\n\tclampValue: function (min, max, value) {\n\t\treturn Math.max(min, Math.min(value, max));\n\t},\n\n\t/**\n\t* Calculates the completion ratio.\n\t*\n\t* @param  {Number} value - Value between `min` and `max`.\n\t* @return {Number}         - Completion ratio (between `0` and `1`).\n\t* @private\n\t*/\n\tcalcRatio: function (value) {\n\t\treturn (value - this.min) / (this.max - this.min);\n\t},\n\n\t/**\n\t* Calculates the completion percentage.\n\t*\n\t* @param  {Number} value - Value between `min` and `max`.\n\t* @return {Number}         - Completion percentage (between `0` and `100`).\n\t* @private\n\t*/\n\tcalcPercent: function (value) {\n\t\treturn this.calcRatio(value) * 100;\n\t},\n\n\t/**\n\t* Positions the progress bar at specified completion percentage.\n\t*\n\t* @param  {Number} percent - Completion percentage corresponding to desired position.\n\t* @private\n\t*/\n\tupdateBarPosition: function (percent) {\n\t\tthis.$.bar.applyStyle('width', percent + '%');\n\t},\n\n\t/**\n\t* Animates progress to the given value.\n\t*\n\t* @param  {Number} value - The desired value. Will be clamped between\n\t* \t[min]{@link module:onyx/ProgressBar~ProgressBar#min} and [max]{@link module:onyx/ProgressBar~ProgressBar#max}.\n\t* @public\n\t*/\n\tanimateProgressTo: function (value) {\n\t\tthis.$.progressAnimator.play({\n\t\t\tstartValue: this.progress,\n\t\t\tendValue: value,\n\t\t\tnode: this.hasNode()\n\t\t});\n\t},\n\n\t/**\n\t* Handles [onStep]{@link module:enyo/Animator~Animator#onStep} animation events.\n\t*\n\t* @private\n\t*/\n\tprogressAnimatorStep: function (sender) {\n\t\tthis.setProgress(sender.value);\n\t\treturn true;\n\t},\n\n\t/**\n\t* Handles [onEnd]{@link module:enyo/Animator~Animator#onEnd} animation events.\n\t*\n\t* @fires module:onyx/ProgressBar~ProgressBar#onAnimateProgressFinish\n\t* @private\n\t*/\n\tprogressAnimatorComplete: function (sender) {\n\t\tthis.doAnimateProgressFinish(sender);\n\t\treturn true;\n\t}\n});\n","require('onyx');\n\n/**\n* Contains the declaration for the {@link module:onyx/Slider~Slider} kind.\n* @module onyx/Slider\n*/\n\nvar\n\tkind = require('enyo/kind'),\n\tAnimator = require('enyo/Animator');\n\nvar\n\tProgressBar = require('onyx/ProgressBar');\n\n/**\n* Fires when bar position is set.\n*\n* @event module:onyx/Slider~Slider#onChange\n* @type {Object}\n* @property {Number} value - The new bar position.\n* @public\n*/\n\n/**\n* Fires while control knob is being dragged.\n*\n* @event module:onyx/Slider~Slider#onChanging\n* @type {Object}\n* @property {Number} value - The current bar position.\n* @public\n*/\n\n/**\n* Fires when animation to a position finishes.\n*\n* @event module:onyx/Slider~Slider#onAnimateFinish\n* @type {module:enyo/Animator~Animator}\n* @public\n* @todo  Animator as the payload; overlap with\n* \t{@link module:onyx/ProgressBar~ProgressBar#onAnimateProgressFinish}\n*/\n\n/**\n* {@link module:onyx/Slider~Slider} is a control that presents a range of selection options\n* in the form of a horizontal slider with a control knob. The knob may be\n* tapped and dragged to the desired location.\n*\n* ```\n* var\n* \tSlider = require('onyx.Slider');\n*\n* {kind: Slider, value: 30}\n* ```\n*\n* [onChanging]{@link module:onyx/Slider~Slider#onChanging} events are fired while the\n* control knob is being dragged, and an [onChange]{@link module:onyx/Slider~Slider#onChange}\n* event is fired when the position is set, either by finishing a drag or by tapping\n* the bar.\n*\n* @class Slider\n* @extends module:onyx/ProgressBar~ProgressBar\n* @ui\n* @public\n*/\nmodule.exports = kind(\n\t/** @lends module:onyx/Slider~Slider.prototype */ {\n\n\t/**\n\t* @private\n\t*/\n\tname: 'onyx.Slider',\n\n\t/**\n\t* @private\n\t*/\n\tkind: ProgressBar,\n\n\t/**\n\t* @private\n\t*/\n\tclasses: 'onyx-slider',\n\n\t/**\n\t* @lends module:onyx/Slider~Slider.prototype\n\t* @private\n\t*/\n\tpublished: {\n\t\t/**\n\t\t* Position of slider, expressed as an integer between `0` and `100`, inclusive.\n\t\t*\n\t\t* @type {Number}\n\t\t* @default  0\n\t\t* @public\n\t\t*/\n\t\tvalue: 0,\n\n\t\t/**\n\t\t* When `true`, current progress will be styled differently from rest of bar.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default  true\n\t\t* @public\n\t\t*/\n\t\tlockBar: true,\n\n\t\t/**\n\t\t* When `true`, tapping on bar will change current position.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @default  true\n\t\t* @public\n\t\t*/\n\t\ttappable: true\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tevents: {\n\t\tonChange: '',\n\t\tonChanging: '',\n\t\tonAnimateFinish: ''\n\t},\n\n\t/**\n\t* If `true`, stripes are shown in the slider bar.\n\t*\n\t* @type {Boolean}\n\t* @default  false\n\t* @public\n\t*/\n\tshowStripes: false,\n\n\t/**\n\t* @private\n\t*/\n\thandlers: {\n\t\tondragstart: 'dragstart',\n\t\tondrag: 'drag',\n\t\tondragfinish: 'dragfinish'\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tmoreComponents: [\n\t\t{kind: Animator, onStep: 'animatorStep', onEnd: 'animatorComplete'},\n\t\t{classes: 'onyx-slider-taparea'},\n\t\t{name: 'knob', classes: 'onyx-slider-knob'}\n\t],\n\n\t/**\n\t* @private\n\t*/\n\tcreate: function () {\n\t\tProgressBar.prototype.create.apply(this, arguments);\n\n\t\t// add handlers for up/down events on knob for pressed state (workaround for inconsistent (timing-wise) active:hover styling)\n\t\tthis.moreComponents[2].ondown = 'knobDown';\n\t\tthis.moreComponents[2].onup = 'knobUp';\n\n\t\tthis.createComponents(this.moreComponents);\n\t\tthis.valueChanged();\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tvalueChanged: function () {\n\t\tthis.value = this.clampValue(this.min, this.max, this.value);\n\t\tif (!this.$.animator.isAnimating()) {\n\t\t\tthis.updateBar(this.value);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tupdateBar: function (value) {\n\t\tvar p = this.calcPercent(value);\n\t\tthis.updateKnobPosition(p);\n\t\tif (this.lockBar) {\n\t\t\tthis.setProgress(value);\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tupdateKnobPosition: function (percent) {\n\t\tthis.$.knob.applyStyle('left', percent + '%');\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tcalcKnobPosition: function (event) {\n\t\tvar x = event.clientX - this.hasNode().getBoundingClientRect().left;\n\t\treturn (x / this.getBounds().width) * (this.max - this.min) + this.min;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tdragstart: function (sender, event) {\n\t\tif (event.horizontal) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.dragging = true;\n\t\t\tsender.addClass('pressed');\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t/**\n\t* @fires module:onyx/Slider~Slider#onChanging\n\t* @private\n\t*/\n\tdrag: function (sender, event) {\n\t\tif (this.dragging) {\n\t\t\tvar v = this.calcKnobPosition(event);\n\t\t\tv = (this.increment) ? this.calcIncrement(v) : v;\n\t\t\tthis.setValue(this.clampValue(this.min, this.max, v));\n\t\t\tthis.doChanging({value: this.value});\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t/**\n\t* @fires module:onyx/Slider~Slider#onChange\n\t* @private\n\t*/\n\tdragfinish: function (sender, event) {\n\t\tthis.dragging = false;\n\t\tevent.preventTap();\n\t\tthis.doChange({value: this.value});\n\t\tsender.removeClass('pressed');\n\t\treturn true;\n\t},\n\n\t/**\n\t* @private\n\t*/\n\ttap: function (sender, event) {\n\t\tif (this.tappable) {\n\t\t\tvar v = this.calcKnobPosition(event);\n\t\t\tv = (this.increment) ? this.calcIncrement(v) : v;\n\t\t\tthis.tapped = true;\n\t\t\tthis.animateTo(v);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tknobDown: function (sender, event) {\n\t\tthis.$.knob.addClass('pressed');\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tknobUp: function (sender, event) {\n\t\tthis.$.knob.removeClass('pressed');\n\t},\n\n\t/**\n\t* Animates to the given value.\n\t*\n\t* @param  {Number} value - The value to animate to.\n\t* @public\n\t* @todo  functional overlap with {@link module:onyx/ProgressBar~ProgressBar#animateProgressTo}\n\t*/\n\tanimateTo: function (value) {\n\t\tthis.$.animator.play({\n\t\t\tstartValue: this.value,\n\t\t\tendValue: value,\n\t\t\tnode: this.hasNode()\n\t\t});\n\n\t\tthis.setValue(value);\n\t},\n\n\t/**\n\t* @private\n\t*/\n\tanimatorStep: function (sender) {\n\t\tthis.updateBar(sender.value);\n\t\treturn true;\n\t},\n\n\t/**\n\t* @fires module:onyx/Slider~Slider#onChange\n\t* @fires module:onyx/Slider~Slider#onAnimateFinish\n\t* @private\n\t*/\n\tanimatorComplete: function (sender) {\n\t\tif (this.tapped) {\n\t\t\tthis.tapped = false;\n\t\t\tthis.doChange({value: this.value});\n\t\t}\n\t\tthis.doAnimateFinish(sender);\n\t\treturn true;\n\t}\n});\n"]}